[
    {
        "id": "9ad225d8ce8ccbfa",
        "type": "tab",
        "label": "SENSFLOOR",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8d57139283332a5e",
        "type": "group",
        "z": "9ad225d8ce8ccbfa",
        "name": "automatic cmd ",
        "style": {
            "label": true
        },
        "nodes": [
            "dd4f48e673dcd9b3",
            "7098406cb5c6988d",
            "3f86355dec5de750",
            "15fa846d417d1af3",
            "92fe8faa00d2bd1d",
            "5d5730ce0bc10697"
        ],
        "x": 754,
        "y": 19,
        "w": 532,
        "h": 142
    },
    {
        "id": "e2b99a3726f69497",
        "type": "group",
        "z": "9ad225d8ce8ccbfa",
        "name": "sensfloor receiving event and setup action&speech",
        "style": {
            "label": true
        },
        "nodes": [
            "baabc7536a222eb8",
            "9cfaca8152770a6b",
            "50499892926bc311",
            "fac3b7b352250af2",
            "6e46967f87418cf9",
            "98c06f137f0fdeb0",
            "58ff6f6b494c58a4",
            "57d7afaf2b8c7807",
            "4a3b1b83230f38dd",
            "b2af5291322cbade",
            "42e8ef76e35aa2a6",
            "82ca88053594233f",
            "e4850c9c3547d1e0",
            "0d1449975b0ac847",
            "c6d8bffc6e03a2d7",
            "3b6c8ef6f494027b",
            "ee5d6eba07d1fb91",
            "95096e56f1402760",
            "ec1f1f46425062a9",
            "80c6d089d5e5889f",
            "6147be29e7612593",
            "db5d27e7b078e6dc",
            "8b5bb90f6fb19130",
            "201d4d9903867d76",
            "01205e13307e2ca4",
            "f9f47f6fc86914e6",
            "5c3d6f52a917118b",
            "75a39a550ef261ac",
            "ea6185d3dd346dd2",
            "aa8905ad2655b954",
            "76b10f909b74442d",
            "50475c4b2fc84ce6",
            "7977406e1bef3459",
            "08256c1fda9875bc",
            "352fdfb049ef3aa4",
            "a997939a1eb3272a",
            "3d40e74a3a766a49",
            "05d2b42de0bb55d4",
            "9378088538ea7ff3"
        ],
        "x": 34,
        "y": 19,
        "w": 592,
        "h": 562
    },
    {
        "id": "7977406e1bef3459",
        "type": "junction",
        "z": "9ad225d8ce8ccbfa",
        "g": "e2b99a3726f69497",
        "x": 500,
        "y": 260,
        "wires": [
            [
                "80c6d089d5e5889f",
                "db5d27e7b078e6dc"
            ]
        ]
    },
    {
        "id": "08256c1fda9875bc",
        "type": "junction",
        "z": "9ad225d8ce8ccbfa",
        "g": "e2b99a3726f69497",
        "x": 420,
        "y": 540,
        "wires": [
            [
                "9378088538ea7ff3"
            ]
        ]
    },
    {
        "id": "352fdfb049ef3aa4",
        "type": "junction",
        "z": "9ad225d8ce8ccbfa",
        "g": "e2b99a3726f69497",
        "x": 280,
        "y": 300,
        "wires": [
            [
                "82ca88053594233f",
                "e4850c9c3547d1e0"
            ]
        ]
    },
    {
        "id": "a997939a1eb3272a",
        "type": "junction",
        "z": "9ad225d8ce8ccbfa",
        "g": "e2b99a3726f69497",
        "x": 280,
        "y": 380,
        "wires": [
            [
                "0d1449975b0ac847",
                "8b5bb90f6fb19130"
            ]
        ]
    },
    {
        "id": "3d40e74a3a766a49",
        "type": "junction",
        "z": "9ad225d8ce8ccbfa",
        "g": "e2b99a3726f69497",
        "x": 280,
        "y": 540,
        "wires": [
            [
                "c6d8bffc6e03a2d7",
                "01205e13307e2ca4"
            ]
        ]
    },
    {
        "id": "05d2b42de0bb55d4",
        "type": "junction",
        "z": "9ad225d8ce8ccbfa",
        "g": "e2b99a3726f69497",
        "x": 280,
        "y": 460,
        "wires": [
            [
                "3b6c8ef6f494027b",
                "5c3d6f52a917118b"
            ]
        ]
    },
    {
        "id": "9378088538ea7ff3",
        "type": "junction",
        "z": "9ad225d8ce8ccbfa",
        "g": "e2b99a3726f69497",
        "x": 500,
        "y": 540,
        "wires": [
            [
                "ec1f1f46425062a9",
                "6147be29e7612593"
            ]
        ]
    },
    {
        "id": "dd4f48e673dcd9b3",
        "type": "function",
        "z": "9ad225d8ce8ccbfa",
        "g": "8d57139283332a5e",
        "name": "Prepare",
        "func": "let module = global.get(\"module\");\nlet payload = msg.payload;\nmsg.payload = {};\nmsg.payload.input = payload;\nif(msg.siteId !== undefined){\n    msg.payload.siteId = msg.siteId;\n}\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 120,
        "wires": [
            [
                "7098406cb5c6988d"
            ]
        ]
    },
    {
        "id": "7098406cb5c6988d",
        "type": "delay",
        "z": "9ad225d8ce8ccbfa",
        "g": "8d57139283332a5e",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "4",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1005,
        "y": 120,
        "wires": [
            [
                "3f86355dec5de750",
                "5d5730ce0bc10697"
            ]
        ],
        "l": false
    },
    {
        "id": "3f86355dec5de750",
        "type": "debug",
        "z": "9ad225d8ce8ccbfa",
        "g": "8d57139283332a5e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1055,
        "y": 80,
        "wires": [],
        "l": false
    },
    {
        "id": "15fa846d417d1af3",
        "type": "link in",
        "z": "9ad225d8ce8ccbfa",
        "g": "8d57139283332a5e",
        "name": "sensfloor cmd in",
        "links": [
            "80c6d089d5e5889f"
        ],
        "x": 795,
        "y": 120,
        "wires": [
            [
                "dd4f48e673dcd9b3"
            ]
        ]
    },
    {
        "id": "92fe8faa00d2bd1d",
        "type": "comment",
        "z": "9ad225d8ce8ccbfa",
        "g": "8d57139283332a5e",
        "name": "README",
        "info": "This flow receive the commands from the sensfloor group and send them to the Speech To Text\n",
        "x": 840,
        "y": 60,
        "wires": []
    },
    {
        "id": "5d5730ce0bc10697",
        "type": "mqtt out",
        "z": "9ad225d8ce8ccbfa",
        "g": "8d57139283332a5e",
        "name": "",
        "topic": "hermes/nlu/query",
        "qos": "",
        "retain": "",
        "broker": "f96ab142.d8bab8",
        "x": 1170,
        "y": 120,
        "wires": []
    },
    {
        "id": "baabc7536a222eb8",
        "type": "comment",
        "z": "9ad225d8ce8ccbfa",
        "g": "e2b99a3726f69497",
        "name": "SenseFloor (here user and pw skyresponse stories)",
        "info": "User1 Skyresponse: assistant de stories\npw: assistant\n\nUser2 Skyresponse: stories\npw: ...Asc..",
        "x": 410,
        "y": 60,
        "wires": []
    },
    {
        "id": "9cfaca8152770a6b",
        "type": "http in",
        "z": "9ad225d8ce8ccbfa",
        "g": "e2b99a3726f69497",
        "name": "[get] fall",
        "url": "/sensfloor/fall",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 220,
        "wires": [
            [
                "57d7afaf2b8c7807",
                "ea6185d3dd346dd2"
            ]
        ]
    },
    {
        "id": "50499892926bc311",
        "type": "http in",
        "z": "9ad225d8ce8ccbfa",
        "g": "e2b99a3726f69497",
        "name": "[get] room_in",
        "url": "/sensfloor/room_in",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 300,
        "wires": [
            [
                "58ff6f6b494c58a4",
                "352fdfb049ef3aa4"
            ]
        ]
    },
    {
        "id": "fac3b7b352250af2",
        "type": "http in",
        "z": "9ad225d8ce8ccbfa",
        "g": "e2b99a3726f69497",
        "name": "[get] room_out",
        "url": "/sensfloor/room_out",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 380,
        "wires": [
            [
                "4a3b1b83230f38dd",
                "a997939a1eb3272a"
            ]
        ]
    },
    {
        "id": "6e46967f87418cf9",
        "type": "http in",
        "z": "9ad225d8ce8ccbfa",
        "g": "e2b99a3726f69497",
        "name": "[get] bed_in",
        "url": "/sensfloor/bed_in",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 460,
        "wires": [
            [
                "42e8ef76e35aa2a6",
                "05d2b42de0bb55d4"
            ]
        ]
    },
    {
        "id": "98c06f137f0fdeb0",
        "type": "http in",
        "z": "9ad225d8ce8ccbfa",
        "g": "e2b99a3726f69497",
        "name": "[get] bed_out",
        "url": "/sensfloor/bed_out",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 540,
        "wires": [
            [
                "b2af5291322cbade",
                "3d40e74a3a766a49"
            ]
        ]
    },
    {
        "id": "58ff6f6b494c58a4",
        "type": "http response",
        "z": "9ad225d8ce8ccbfa",
        "g": "e2b99a3726f69497",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 270,
        "y": 260,
        "wires": []
    },
    {
        "id": "57d7afaf2b8c7807",
        "type": "http response",
        "z": "9ad225d8ce8ccbfa",
        "g": "e2b99a3726f69497",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 270,
        "y": 180,
        "wires": []
    },
    {
        "id": "4a3b1b83230f38dd",
        "type": "http response",
        "z": "9ad225d8ce8ccbfa",
        "g": "e2b99a3726f69497",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 270,
        "y": 340,
        "wires": []
    },
    {
        "id": "b2af5291322cbade",
        "type": "http response",
        "z": "9ad225d8ce8ccbfa",
        "g": "e2b99a3726f69497",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 270,
        "y": 500,
        "wires": []
    },
    {
        "id": "42e8ef76e35aa2a6",
        "type": "http response",
        "z": "9ad225d8ce8ccbfa",
        "g": "e2b99a3726f69497",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 270,
        "y": 420,
        "wires": []
    },
    {
        "id": "82ca88053594233f",
        "type": "function",
        "z": "9ad225d8ce8ccbfa",
        "g": "e2b99a3726f69497",
        "name": "room_in_speech",
        "func": "let module = global.get(\"module\");\nlet siteId = msg.payload.siteId;\nmsg = {};\nmsg.payload = module.feedback(module.settingsGetValue(\"msgLang\"), siteId, \"Hello\");\nmsg.payload.text = flow.get(\"room_in_speech\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 335,
        "y": 300,
        "wires": [
            [
                "08256c1fda9875bc"
            ]
        ],
        "outputLabels": [
            "automatic cmd"
        ],
        "icon": "font-awesome/fa-file-sound-o",
        "l": false
    },
    {
        "id": "e4850c9c3547d1e0",
        "type": "function",
        "z": "9ad225d8ce8ccbfa",
        "g": "e2b99a3726f69497",
        "name": "room_in_action",
        "func": "msg = {};\nmsg.payload = flow.get(\"room_in_action\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 355,
        "y": 260,
        "wires": [
            [
                "95096e56f1402760"
            ]
        ],
        "l": false
    },
    {
        "id": "0d1449975b0ac847",
        "type": "function",
        "z": "9ad225d8ce8ccbfa",
        "g": "e2b99a3726f69497",
        "name": "room_out_speech",
        "func": "let module = global.get(\"module\");\nlet siteId = msg.payload.siteId;\nmsg = {};\nmsg.payload = module.feedback(module.settingsGetValue(\"msgLang\"), siteId, \"Hello\");\nmsg.payload.text = flow.get(\"room_out_speech\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 335,
        "y": 380,
        "wires": [
            [
                "08256c1fda9875bc"
            ]
        ],
        "outputLabels": [
            "automatic cmd"
        ],
        "icon": "font-awesome/fa-file-sound-o",
        "l": false
    },
    {
        "id": "c6d8bffc6e03a2d7",
        "type": "function",
        "z": "9ad225d8ce8ccbfa",
        "g": "e2b99a3726f69497",
        "name": "bed_out_speech",
        "func": "let module = global.get(\"module\");\nlet siteId = msg.payload.siteId;\nmsg = {};\nmsg.payload = module.feedback(module.settingsGetValue(\"msgLang\"), siteId, \"Hello\");\nmsg.payload.text = flow.get(\"bed_out_speech\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 335,
        "y": 540,
        "wires": [
            [
                "08256c1fda9875bc"
            ]
        ],
        "outputLabels": [
            "automatic cmd"
        ],
        "icon": "font-awesome/fa-file-sound-o",
        "l": false
    },
    {
        "id": "3b6c8ef6f494027b",
        "type": "function",
        "z": "9ad225d8ce8ccbfa",
        "g": "e2b99a3726f69497",
        "name": "bed_in_speech",
        "func": "let module = global.get(\"module\");\nlet siteId = msg.payload.siteId;\nmsg = {};\nmsg.payload = module.feedback(module.settingsGetValue(\"msgLang\"), siteId, \"Hello\");\nmsg.payload.text = flow.get(\"bed_in_speech\");\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 335,
        "y": 460,
        "wires": [
            [
                "08256c1fda9875bc"
            ]
        ],
        "outputLabels": [
            "automatic cmd"
        ],
        "icon": "font-awesome/fa-file-sound-o",
        "l": false
    },
    {
        "id": "ee5d6eba07d1fb91",
        "type": "comment",
        "z": "9ad225d8ce8ccbfa",
        "g": "e2b99a3726f69497",
        "name": "README",
        "info": "This group receive data of any event registered in sensfloor from the their gateway and,\ndepending of the action received, will do differents things/ say differents sentences.\n\nThe node that require our attention is named DEFINE ACTIONS & SPEECH and contains the fllowing struture, one for each event :\n\n/***********************************/\n\n    /*****ROOM IN ACTION*****/\n\nlet room_in_action = [];\nroom_in_action.push(\"action1\");\nflow.set(\"room_in_action\", room_in_action);\n\n    /*****ROOM IN SPEECH*****/\n\nflow.set(\"room_in_speech\",\"speech\");\n\n/***********************************/\n\nFor example, the structure above sets the actions and the speech for the event room_in.\n\n\n/****HOW TO PERSONALISE YOUR ACTIONS****/\n\nTo set-up your actions you need to edit this code line :\nroom_in_action.push(\"action1\");\n\nThere are three possibilities, you want only one action,you want more or you want none.\n\nIf you want one action, the line will look like this :\nroom_in_action.push(\"action1\");\nwhere action1 need to be replace by the action you want Aragon to do.\nDO NOT forget to put your action in double quotes and the semicolon at the end of the line.\n\nIf you want two or more there is not big change to do, you simply need to write your actions separated by a comma, like this :\nroom_in_action.push(\"action1\",\"action2\");\nDO NOT forget to put your action in double quotes and the semicolon at the end of the line.\n\nIf you dont want any action to be done just leave the bracket empty.\nDO NOT forget the semi colon at the end of the line\n\n\n/****HOW TO PERSONALISE YOUR SENTENCE****/\n\nTo edit the speech you will to modifie this line :\nflow.set(\"room_in_speech\",\"speech\");\n\nif you want to say something replace the word speech by the sentence you want to hear in double quotes,\nand if you dont want to hear anything, leave the double quotes empty (like that \"\")\n\nYou do not have to touch anything else\n\n\n\n\n\n\n\n\n\n",
        "x": 120,
        "y": 60,
        "wires": []
    },
    {
        "id": "95096e56f1402760",
        "type": "split",
        "z": "9ad225d8ce8ccbfa",
        "g": "e2b99a3726f69497",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 415,
        "y": 260,
        "wires": [
            [
                "7977406e1bef3459"
            ]
        ],
        "l": false
    },
    {
        "id": "ec1f1f46425062a9",
        "type": "link out",
        "z": "9ad225d8ce8ccbfa",
        "g": "e2b99a3726f69497",
        "name": "speaker out",
        "mode": "link",
        "links": [
            "3bd57099.afbdb8"
        ],
        "x": 555,
        "y": 540,
        "wires": []
    },
    {
        "id": "80c6d089d5e5889f",
        "type": "link out",
        "z": "9ad225d8ce8ccbfa",
        "g": "e2b99a3726f69497",
        "name": "sensfloor cmd out",
        "mode": "link",
        "links": [
            "15fa846d417d1af3"
        ],
        "x": 555,
        "y": 260,
        "wires": []
    },
    {
        "id": "6147be29e7612593",
        "type": "debug",
        "z": "9ad225d8ce8ccbfa",
        "g": "e2b99a3726f69497",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 555,
        "y": 500,
        "wires": [],
        "l": false
    },
    {
        "id": "db5d27e7b078e6dc",
        "type": "debug",
        "z": "9ad225d8ce8ccbfa",
        "g": "e2b99a3726f69497",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 555,
        "y": 300,
        "wires": [],
        "l": false
    },
    {
        "id": "8b5bb90f6fb19130",
        "type": "function",
        "z": "9ad225d8ce8ccbfa",
        "g": "e2b99a3726f69497",
        "name": "room_out_action",
        "func": "msg = {};\nmsg.payload = flow.get(\"room_out_action\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 355,
        "y": 340,
        "wires": [
            [
                "201d4d9903867d76"
            ]
        ],
        "l": false
    },
    {
        "id": "201d4d9903867d76",
        "type": "split",
        "z": "9ad225d8ce8ccbfa",
        "g": "e2b99a3726f69497",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 415,
        "y": 340,
        "wires": [
            [
                "7977406e1bef3459"
            ]
        ],
        "l": false
    },
    {
        "id": "01205e13307e2ca4",
        "type": "function",
        "z": "9ad225d8ce8ccbfa",
        "g": "e2b99a3726f69497",
        "name": "bed_out_action",
        "func": "msg = {};\nmsg.payload = flow.get(\"bed_out_action\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 355,
        "y": 500,
        "wires": [
            [
                "f9f47f6fc86914e6"
            ]
        ],
        "l": false
    },
    {
        "id": "f9f47f6fc86914e6",
        "type": "split",
        "z": "9ad225d8ce8ccbfa",
        "g": "e2b99a3726f69497",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 415,
        "y": 500,
        "wires": [
            [
                "7977406e1bef3459"
            ]
        ],
        "l": false
    },
    {
        "id": "5c3d6f52a917118b",
        "type": "function",
        "z": "9ad225d8ce8ccbfa",
        "g": "e2b99a3726f69497",
        "name": "bed_in_action",
        "func": "msg = {};\nmsg.payload = flow.get(\"bed_in_action\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 355,
        "y": 420,
        "wires": [
            [
                "75a39a550ef261ac"
            ]
        ],
        "l": false
    },
    {
        "id": "75a39a550ef261ac",
        "type": "split",
        "z": "9ad225d8ce8ccbfa",
        "g": "e2b99a3726f69497",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 415,
        "y": 420,
        "wires": [
            [
                "7977406e1bef3459"
            ]
        ],
        "l": false
    },
    {
        "id": "ea6185d3dd346dd2",
        "type": "function",
        "z": "9ad225d8ce8ccbfa",
        "g": "e2b99a3726f69497",
        "name": "Prepare to ask if user is OK",
        "func": "let module = global.get(\"module\");\nlet language = module.settingsGetValue(\"msgLang\");\n\nlet siteId;\nglobal.set(\"helpCallTrigger\",\"floor\");\n\nif (language === \"de\") {\n    msg.payload.text = \"Wichtige Nachricht! Es sieht so aus, als wären Sie gestürzt, ich solle um Hilfe rufen?\";\n    siteId = \"Schlafzimmer\";\n} else if (language === \"fr\") {\n    msg.payload.text = \"Message important! il semblerait que vous soyez tombé, dois-je appeler de l'aide ?\";\n    siteId = \"Chambre\";\n} else {\n    msg.payload.text = \"Important message! it seems like you have fallen , shall I call for help?\";\n    siteId = \"Bedroom\";\n}\n\nif(msg.payload.siteId === undefined){\n    msg.payload.siteId = siteId;\n    node.warn(\"The siteId should come from sensflooer, now hardcoded to: \"+msg.payload.siteId);\n}\nmsg.payload = JSON.stringify(msg.payload);\nreturn msg;\n    \n\n    \n \n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 335,
        "y": 220,
        "wires": [
            [
                "aa8905ad2655b954"
            ]
        ],
        "icon": "node-red/alert.svg",
        "l": false
    },
    {
        "id": "aa8905ad2655b954",
        "type": "mqtt out",
        "z": "9ad225d8ce8ccbfa",
        "g": "e2b99a3726f69497",
        "name": "proknx/aal/queryuser",
        "topic": "proknx/aal/queryuser",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "b7d2dbd0.c8ee4",
        "x": 500,
        "y": 220,
        "wires": []
    },
    {
        "id": "76b10f909b74442d",
        "type": "inject",
        "z": "9ad225d8ce8ccbfa",
        "g": "e2b99a3726f69497",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 165,
        "y": 120,
        "wires": [
            [
                "50475c4b2fc84ce6"
            ]
        ],
        "l": false
    },
    {
        "id": "50475c4b2fc84ce6",
        "type": "function",
        "z": "9ad225d8ce8ccbfa",
        "g": "e2b99a3726f69497",
        "name": "DEFINE ACTIONS & SPEECH",
        "func": "/***********************************/\n\n    /*****ROOM IN ACTION*****/\n\nlet room_in_action = [];\n//room_in_action.push(\"turn on the bedroom\",\"turn on the bathroom\");\nroom_in_action.push(\"allume la chambre\",\"allume les toilettes\");\nflow.set(\"room_in_action\", room_in_action);\n\n    /*****ROOM IN SPEECH*****/\n\n//flow.set(\"room_in_speech\",\"welcome\");\nflow.set(\"room_in_speech\",\"bienvenue\");\n\n/***********************************/\n\n    /*****ROOM OUT ACTION*****/\n\nlet room_out_action = [];\n//room_out_action.push(\"turn off light everywhere\");\nroom_out_action.push(\"éteins partout\",\"allume la terrasse\");\nflow.set(\"room_out_action\", room_out_action);\n\n    /*****ROOM OUT SPEECH*****/\n\n//flow.set(\"room_out_speech\",\"you are leaving the room\");\nflow.set(\"room_out_speech\",\"vous quittez la pièce\");\n\n/***********************************/\n\n    /*****BED IN ACTION*****/\n\nlet bed_in_action = [];\n//bed_in_action.push(\"turn off light everywhere\");\nbed_in_action.push(\"éteins partout\");\nflow.set(\"bed_in_action\", bed_in_action);\n\n    /*****BED IN SPEECH*****/\n\n//flow.set(\"bed_in_speech\",\"you are in the bed\");\nflow.set(\"bed_in_speech\",\"vous êtes dans le lit\");\n\n/***********************************/\n\n    /*****BED OUT ACTION*****/\n\nlet bed_out_action = [];\n//bed_out_action.push(\"turn on the bathroom\");\nbed_out_action.push(\"allume les toilettes\");\nflow.set(\"bed_out_action\", bed_out_action);\n\n\n    /*****BED OUT SPEECH*****/\n\n//flow.set(\"bed_out_speech\",\"you are out of the bed\");\nflow.set(\"bed_out_speech\",\"vous sortez du lit\");\n\n/***********************************/\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "f96ab142.d8bab8",
        "type": "mqtt-broker",
        "z": "8f34800c1dc3f144",
        "name": "-",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "3",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": "",
        "info": "-"
    },
    {
        "id": "b7d2dbd0.c8ee4",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    }
]