[
    {
        "id": "a6d29d13.3c30c",
        "type": "tab",
        "label": "ENOCEAN AAL",
        "disabled": false,
        "info": ""
    },
    {
        "id": "338c693bdaebb43e",
        "type": "group",
        "z": "a6d29d13.3c30c",
        "name": "Send enocean",
        "style": {
            "label": true
        },
        "nodes": [
            "88ab75e4546acae8",
            "34ce920b888d938a",
            "b7666ad866175c53",
            "948dc8c5ac036d66",
            "80902b6feecdf85f",
            "7d2960ad62a17878",
            "44c83bde680851cb",
            "544e621fbffe453c",
            "4162af41c53dd4f8",
            "a83de89197fac280",
            "5a3cc68d55c6383b",
            "4eef297f72a021fc",
            "91fbf7636044c4db",
            "6126d343be6b08a3",
            "661bc5d96d91d4c8",
            "494376ba421f6dd8",
            "162237920512b8e5",
            "281f11c4ba293faf",
            "bff0d5344e91ad14"
        ],
        "x": 1714,
        "y": 39,
        "w": 552,
        "h": 302
    },
    {
        "id": "e201ec162ee2a68b",
        "type": "group",
        "z": "a6d29d13.3c30c",
        "name": "receiving enocean data",
        "style": {
            "label": true
        },
        "nodes": [
            "cc35e6a6.347f58",
            "f0aa41fc4609326b",
            "3107ef0c67f14dcd",
            "b862a2b04fb9c83f"
        ],
        "x": 14,
        "y": 39,
        "w": 232,
        "h": 122
    },
    {
        "id": "69976a2f01278857",
        "type": "group",
        "z": "a6d29d13.3c30c",
        "name": "manual send",
        "style": {
            "label": true
        },
        "nodes": [
            "00d3bb90df4e7abd",
            "09966319a725954a",
            "d91e6826af9a653b",
            "625377773190f47b",
            "54fa715be756d2f4",
            "69d5bc6a1b2bef8d"
        ],
        "x": 2334,
        "y": 39,
        "w": 512,
        "h": 162
    },
    {
        "id": "e2f01704a7c095f7",
        "type": "group",
        "z": "a6d29d13.3c30c",
        "name": "enocean custom devices",
        "style": {
            "label": true
        },
        "nodes": [
            "8fc93d2c3c8aacf5",
            "6d7bd6e165b56669",
            "5ad86459cbd8f8b3",
            "8aeb4a8e241b8242",
            "42960ad7bff16185",
            "d1c5d02e64755d60",
            "2e5b57051b5b4533",
            "d25c44f4f7b7ca84",
            "1bcfb2869a3e8b1f",
            "6c6e8b6015b393f2",
            "2cdcafbee62d4c8b",
            "113f91b4a169febf",
            "f92dfcc4d3bcab54",
            "0a288b39e028efd4",
            "3c9d0a2cc0494e21",
            "1ce15fe10bdd74bd",
            "24be72cd2b0c72e5",
            "a65b604abd3a5c61",
            "e59774aec38e598a",
            "dcc63ec81e61abd9",
            "7fc35062f890e1f5",
            "788ffe78f9acff3f",
            "919ec85feb8541c5",
            "649cb03a8b53779a",
            "13fe57eeef3922c5",
            "e085b7bcd54703c5",
            "23754c721bf2d393",
            "717efb4ad3f6f193",
            "2b4b797729ab8614",
            "68105d2d9367b6c1",
            "7e880ce7ba4e6707",
            "29f02ad0eccc5bf4",
            "ee6647f28f4202ce",
            "20945fd3e9469b2e",
            "ac3e27bc37fe233c",
            "bfda932f0d3c2d07",
            "836b41a38ac79e8d",
            "eb8844880bc4dd7d",
            "f37c3fe9deeeb1bf",
            "3cb3aad30d0a733d",
            "04c51508ff442c47",
            "569f8fec8981559f",
            "237c0b2324d565c3",
            "dd74359dd9825ac5",
            "0cdb83c78087cab6",
            "e0449b56f2c97d16",
            "2a9937537c09d060",
            "8b150cdf1a8f60ff",
            "ea9af51a9b79d110",
            "b1f832a73c0c484c",
            "bb3613295775ef52",
            "d30724841d136978",
            "f31e3118ad1bc274",
            "e8aa5223470234c9"
        ],
        "x": 914,
        "y": 39,
        "w": 732,
        "h": 722
    },
    {
        "id": "5b2a8d22374d4cf0",
        "type": "group",
        "z": "a6d29d13.3c30c",
        "name": "actuator",
        "style": {
            "label": true
        },
        "nodes": [
            "1a5783c8393e465c",
            "105eb4227b319172",
            "ca7059f858718b34",
            "1f04762d607971ee",
            "9cb276cef038920e",
            "706f5c1cd027638a",
            "57fc523524c27b39",
            "2f572da3ec11d6d2",
            "1fb27af310cb4bf8"
        ],
        "x": 314,
        "y": 39,
        "w": 532,
        "h": 242
    },
    {
        "id": "c35c250e1c6e5def",
        "type": "group",
        "z": "a6d29d13.3c30c",
        "name": "automatic cmd ",
        "style": {
            "label": true
        },
        "nodes": [
            "a97526f901c41f9d",
            "4927eaa8747d5f8d",
            "502aed4b4eb3aecf",
            "eae05f3289e9221e",
            "221f2a01cfcd32b1",
            "6526a9c4cd7277d9"
        ],
        "x": 1714,
        "y": 379,
        "w": 512,
        "h": 142
    },
    {
        "id": "2b089b24fb045233",
        "type": "group",
        "z": "a6d29d13.3c30c",
        "name": "switch for table de nuit",
        "style": {
            "label": true
        },
        "nodes": [
            "b8da7324.ac706",
            "336f88c5.932b18",
            "d5957ef5.439f",
            "e529c437.4c4f18",
            "75dd71b9.5c90a",
            "ce7a95a6b864fe0d",
            "c12358771fd2f1a0",
            "824858af3288be7b",
            "b2a7a955.ec75d8"
        ],
        "x": 74,
        "y": 359,
        "w": 542,
        "h": 162
    },
    {
        "id": "912961db93b0575f",
        "type": "group",
        "z": "a6d29d13.3c30c",
        "name": "tirette",
        "style": {
            "label": true
        },
        "nodes": [
            "c03f0d4c4356c1d5",
            "644943328dedfac7",
            "1fe112699a7d51f7",
            "78e13798195ec231",
            "bcbc7929ce2b7894",
            "90a1c48adfe8b7b2",
            "026ca30720f20827",
            "096175b4309a68bb",
            "591ac6ddb54a4e94"
        ],
        "x": 74,
        "y": 579,
        "w": 542,
        "h": 162
    },
    {
        "id": "cc35e6a6.347f58",
        "type": "enocean-in",
        "z": "a6d29d13.3c30c",
        "g": "e201ec162ee2a68b",
        "serialport": "cfcf4fbc.4250e",
        "name": "",
        "x": 90,
        "y": 120,
        "wires": [
            [
                "f0aa41fc4609326b",
                "3107ef0c67f14dcd"
            ]
        ],
        "info": "Light and Blind Control - Application Style 1"
    },
    {
        "id": "f0aa41fc4609326b",
        "type": "debug",
        "z": "a6d29d13.3c30c",
        "g": "e201ec162ee2a68b",
        "name": "raw data",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 185,
        "y": 80,
        "wires": [],
        "l": false
    },
    {
        "id": "3107ef0c67f14dcd",
        "type": "link out",
        "z": "a6d29d13.3c30c",
        "g": "e201ec162ee2a68b",
        "name": "out input enocean",
        "mode": "link",
        "links": [
            "ce7a95a6b864fe0d",
            "ea22e2d05465fa34",
            "7619ab2b44456a29",
            "841a3fba7a6bf274",
            "4faeedb9354240e9",
            "90a1c48adfe8b7b2",
            "1973c5e9fe844467",
            "e2fdde53e716ec59",
            "2e8becb43719dd61",
            "a4a71d6e133dbb35",
            "508ba8016e664599",
            "4a0593c58bc3c887",
            "706f5c1cd027638a"
        ],
        "x": 185,
        "y": 120,
        "wires": []
    },
    {
        "id": "88ab75e4546acae8",
        "type": "enocean-out",
        "z": "a6d29d13.3c30c",
        "g": "338c693bdaebb43e",
        "serialport": "cfcf4fbc.4250e",
        "name": "",
        "logOutput": false,
        "x": 2190,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "34ce920b888d938a",
        "type": "enocean-btn",
        "z": "a6d29d13.3c30c",
        "g": "338c693bdaebb43e",
        "name": "f6-02-01",
        "encoding": "f6-02-01",
        "delay": "",
        "x": 1940,
        "y": 140,
        "wires": [
            [
                "661bc5d96d91d4c8"
            ]
        ]
    },
    {
        "id": "b7666ad866175c53",
        "type": "comment",
        "z": "a6d29d13.3c30c",
        "g": "338c693bdaebb43e",
        "name": "README",
        "info": "This group receives data from custom devices and sends enocean frame when you simulate a switch, we are able to simulate 4 differents profiles defined by their EEP.\nEEP is the EnOcean Equipment Profiles and are the fundament of interoperability between EnOcean devices of all different manufacturers.\n\n\n\nThe following EEP description comes directly from Enoceean :\n\nf6-02-01 :\n    This EEP definition is based on the assumption that a RPS switch module (e.g. PTM200) is installed in a 0-STATE up position! Application Style 1 is widely used in EU but may be found in other markets as well.\n\nf6-02-02 :\n    This EEP definition is based on the assumption that a RPS switch module (e.g. PTM200) is installed in an I-STATE up position! Application Style 2 is typically used in US and CAN but may be found in other markets as well.\n\nf6-03-01 :\n    This EEP definition is based on the assumption that a RPS switch module is installed in a 0-STATE up position! Application Style 1 is widely used in EU but may be found in other markets as well.\n    \nf6-03-02 :\n    This EEP definition is based on the assumption that a RPS switch module is installed in a I-STATE up position! Application Style 2 is typically used in US and CAN but may be found in other markets as well.",
        "x": 1800,
        "y": 80,
        "wires": []
    },
    {
        "id": "948dc8c5ac036d66",
        "type": "enocean-btn",
        "z": "a6d29d13.3c30c",
        "g": "338c693bdaebb43e",
        "name": "f6-02-02",
        "encoding": "f6-02-02",
        "delay": "",
        "x": 1940,
        "y": 180,
        "wires": [
            [
                "661bc5d96d91d4c8"
            ]
        ]
    },
    {
        "id": "80902b6feecdf85f",
        "type": "enocean-btn",
        "z": "a6d29d13.3c30c",
        "g": "338c693bdaebb43e",
        "name": "f6-03-01",
        "encoding": "f6-03-01",
        "delay": "",
        "x": 1940,
        "y": 260,
        "wires": [
            [
                "661bc5d96d91d4c8"
            ]
        ]
    },
    {
        "id": "7d2960ad62a17878",
        "type": "enocean-btn",
        "z": "a6d29d13.3c30c",
        "g": "338c693bdaebb43e",
        "name": "f6-03-02",
        "encoding": "f6-03-02",
        "delay": "",
        "x": 1940,
        "y": 300,
        "wires": [
            [
                "661bc5d96d91d4c8"
            ]
        ]
    },
    {
        "id": "44c83bde680851cb",
        "type": "link in",
        "z": "a6d29d13.3c30c",
        "g": "338c693bdaebb43e",
        "name": "f6-02-01 in",
        "links": [
            "dd74359dd9825ac5"
        ],
        "x": 1755,
        "y": 140,
        "wires": [
            [
                "5a3cc68d55c6383b"
            ]
        ]
    },
    {
        "id": "544e621fbffe453c",
        "type": "link in",
        "z": "a6d29d13.3c30c",
        "g": "338c693bdaebb43e",
        "name": "f6-02-0 in",
        "links": [
            "0cdb83c78087cab6"
        ],
        "x": 1755,
        "y": 180,
        "wires": [
            [
                "4eef297f72a021fc"
            ]
        ]
    },
    {
        "id": "4162af41c53dd4f8",
        "type": "link in",
        "z": "a6d29d13.3c30c",
        "g": "338c693bdaebb43e",
        "name": "f6-03-01 in",
        "links": [
            "e0449b56f2c97d16"
        ],
        "x": 1755,
        "y": 260,
        "wires": [
            [
                "91fbf7636044c4db"
            ]
        ]
    },
    {
        "id": "a83de89197fac280",
        "type": "link in",
        "z": "a6d29d13.3c30c",
        "g": "338c693bdaebb43e",
        "name": "f6-03-02 in",
        "links": [
            "2a9937537c09d060"
        ],
        "x": 1755,
        "y": 300,
        "wires": [
            [
                "6126d343be6b08a3"
            ]
        ]
    },
    {
        "id": "5a3cc68d55c6383b",
        "type": "function",
        "z": "a6d29d13.3c30c",
        "g": "338c693bdaebb43e",
        "name": "remove useless properties",
        "func": "var button = msg.payload.button;\nvar channel = msg.payload.channel;\nvar event = msg.payload.event;\n\nvar sortedPayload = {\n    button: button,\n    channel: channel,\n    event: event\n};\nmsg = {};\nmsg.payload = sortedPayload;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1795,
        "y": 140,
        "wires": [
            [
                "34ce920b888d938a",
                "bff0d5344e91ad14"
            ]
        ],
        "l": false
    },
    {
        "id": "bff0d5344e91ad14",
        "type": "debug",
        "z": "a6d29d13.3c30c",
        "g": "338c693bdaebb43e",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1835,
        "y": 140,
        "wires": [],
        "l": false
    },
    {
        "id": "281f11c4ba293faf",
        "type": "debug",
        "z": "a6d29d13.3c30c",
        "g": "338c693bdaebb43e",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1835,
        "y": 180,
        "wires": [],
        "l": false
    },
    {
        "id": "494376ba421f6dd8",
        "type": "debug",
        "z": "a6d29d13.3c30c",
        "g": "338c693bdaebb43e",
        "name": "debug 3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1835,
        "y": 260,
        "wires": [],
        "l": false
    },
    {
        "id": "162237920512b8e5",
        "type": "debug",
        "z": "a6d29d13.3c30c",
        "g": "338c693bdaebb43e",
        "name": "debug 4",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1835,
        "y": 300,
        "wires": [],
        "l": false
    },
    {
        "id": "4eef297f72a021fc",
        "type": "function",
        "z": "a6d29d13.3c30c",
        "g": "338c693bdaebb43e",
        "name": "remove useless properties",
        "func": "var button = msg.payload.button;\nvar channel = msg.payload.channel;\nvar event = msg.payload.event;\n\nvar sortedPayload = {\n    button: button,\n    channel: channel,\n    event: event\n};\n\nmsg.payload = sortedPayload;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1795,
        "y": 180,
        "wires": [
            [
                "948dc8c5ac036d66",
                "281f11c4ba293faf"
            ]
        ],
        "l": false
    },
    {
        "id": "91fbf7636044c4db",
        "type": "function",
        "z": "a6d29d13.3c30c",
        "g": "338c693bdaebb43e",
        "name": "remove useless properties",
        "func": "var button = msg.payload.button;\nvar channel = msg.payload.channel;\nvar event = msg.payload.event;\n\nvar sortedPayload = {\n    button: button,\n    channel: channel,\n    event: event\n};\n\nmsg.payload = sortedPayload;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1795,
        "y": 260,
        "wires": [
            [
                "80902b6feecdf85f",
                "494376ba421f6dd8"
            ]
        ],
        "l": false
    },
    {
        "id": "6126d343be6b08a3",
        "type": "function",
        "z": "a6d29d13.3c30c",
        "g": "338c693bdaebb43e",
        "name": "remove useless properties",
        "func": "var button = msg.payload.button;\nvar channel = msg.payload.channel;\nvar event = msg.payload.event;\n\nvar sortedPayload = {\n    button: button,\n    channel: channel,\n    event: event\n};\n\nmsg.payload = sortedPayload;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1795,
        "y": 300,
        "wires": [
            [
                "7d2960ad62a17878",
                "162237920512b8e5"
            ]
        ],
        "l": false
    },
    {
        "id": "661bc5d96d91d4c8",
        "type": "delay",
        "z": "a6d29d13.3c30c",
        "g": "338c693bdaebb43e",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "8",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2085,
        "y": 220,
        "wires": [
            [
                "88ab75e4546acae8"
            ]
        ],
        "l": false
    },
    {
        "id": "b862a2b04fb9c83f",
        "type": "comment",
        "z": "a6d29d13.3c30c",
        "g": "e201ec162ee2a68b",
        "name": "README",
        "info": "This group accepts all the enocean frames it finds from the usb gateway, you need to set the correct serial port for this to work.\nPlease note that if the device is the first and only connected to the master, the serial port should be /dev/ttyUSB0",
        "x": 100,
        "y": 80,
        "wires": []
    },
    {
        "id": "00d3bb90df4e7abd",
        "type": "enocean-out",
        "z": "a6d29d13.3c30c",
        "g": "69976a2f01278857",
        "serialport": "cfcf4fbc.4250e",
        "name": "",
        "logOutput": false,
        "x": 2770,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "09966319a725954a",
        "type": "enocean-btn",
        "z": "a6d29d13.3c30c",
        "g": "69976a2f01278857",
        "name": "",
        "encoding": "f6-02-01",
        "delay": "",
        "x": 2600,
        "y": 140,
        "wires": [
            [
                "69d5bc6a1b2bef8d"
            ]
        ]
    },
    {
        "id": "d91e6826af9a653b",
        "type": "inject",
        "z": "a6d29d13.3c30c",
        "g": "69976a2f01278857",
        "name": "ON",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"button\":0,\"channel\":1,\"event\":\"click\"}",
        "payloadType": "json",
        "x": 2430,
        "y": 120,
        "wires": [
            [
                "09966319a725954a"
            ]
        ]
    },
    {
        "id": "625377773190f47b",
        "type": "inject",
        "z": "a6d29d13.3c30c",
        "g": "69976a2f01278857",
        "name": "OFF",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"button\":1,\"channel\":1,\"event\":\"click\"}",
        "payloadType": "json",
        "x": 2430,
        "y": 160,
        "wires": [
            [
                "09966319a725954a"
            ]
        ]
    },
    {
        "id": "54fa715be756d2f4",
        "type": "comment",
        "z": "a6d29d13.3c30c",
        "g": "69976a2f01278857",
        "name": "README",
        "info": "This group simulates a 2 Rocker Switch (8 Buttons: 0, 1, 2, 3, 4, 5, 6, 7) that can be \"click\"ed or \"down\"ed.\n     \"click\" means the button is immediately released after beeing pressed. When \"down\"ed you have to release the button yourself.\n     When a receiver is in LRN mode, send either `button: 0` or `button: 1` to teach in Rocker 1, send `button: 2` or `button: 3` to teach in Rocker 2 etc..\n     With one USB you can send on up to 128 (0-127) channels. so you can simulate 256 Rocker switches.\n     \n     \n     Button set-up :\n        can be 0, 1, 2, 3, 4, 5, 6, 7 . The button to click on the simulated rocker.\n        \n     Channel set-up :\n        can be 0-127. The channel to send on. It's an offset off the baseId of your USB 300.\n        \n     Event set-up :\n        can be one of \"click\",\"down\",\"release\". Defines the event to send\n\nthe text you send must have the same shape as this example:\n{\n    \"button\": 0,\n    \"channel\": 4,\n    \"event\": \"click\"\n}\n\n/!\\ do not forget to modify the values !\nin the actual state, the group simulate one rocker (because we have 1 ON and 1 OFF)\nwe highly recommand you to save one as a template and copy paste this group to have one per device you want to control.\nbe carefull to not duplicate any buttons !",
        "x": 2420,
        "y": 80,
        "wires": []
    },
    {
        "id": "69d5bc6a1b2bef8d",
        "type": "delay",
        "z": "a6d29d13.3c30c",
        "g": "69976a2f01278857",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "8",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2695,
        "y": 140,
        "wires": [
            [
                "00d3bb90df4e7abd"
            ]
        ],
        "l": false
    },
    {
        "id": "8fc93d2c3c8aacf5",
        "type": "mqtt in",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "",
        "topic": "proknx/roomlist/updated",
        "qos": "2",
        "datatype": "auto",
        "broker": "b7d2dbd0.c8ee4",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 1040,
        "y": 220,
        "wires": [
            [
                "6d7bd6e165b56669"
            ]
        ]
    },
    {
        "id": "6d7bd6e165b56669",
        "type": "function",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "Merge in the custom rooms with the main gateway rooms",
        "func": "let module = global.get(\"module\");\n\nvar rooms = module.settingsGetValue(\"allRooms\");\nvar customRooms = global.get(\"customRooms\");\nif(rooms !== undefined && customRooms !== undefined){\n    rooms = [...rooms, ...customRooms];\n    rooms = rooms.filter((item,index)=>{\n        return (rooms.indexOf(item) == index)\n    })\n    module.settingsSetValue(\"allRooms\",rooms);\n    msg.payload = rooms;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1205,
        "y": 220,
        "wires": [
            [
                "5ad86459cbd8f8b3"
            ]
        ],
        "l": false
    },
    {
        "id": "5ad86459cbd8f8b3",
        "type": "debug",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1255,
        "y": 220,
        "wires": [],
        "l": false
    },
    {
        "id": "8aeb4a8e241b8242",
        "type": "mqtt in",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "",
        "topic": "proknx/devicelist/updated",
        "qos": "2",
        "datatype": "auto",
        "broker": "f96ab142.d8bab8",
        "inputs": 0,
        "x": 1050,
        "y": 160,
        "wires": [
            [
                "d25c44f4f7b7ca84"
            ]
        ]
    },
    {
        "id": "42960ad7bff16185",
        "type": "comment",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "↓ Custom devices - define your devices here and connect the nodes ↓",
        "info": "",
        "x": 1210,
        "y": 260,
        "wires": []
    },
    {
        "id": "d1c5d02e64755d60",
        "type": "inject",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "Define custom devices",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "3",
        "topic": "",
        "payload": "[{\"custom\":true,\"name\":\"plafond toilette\",\"zone\":\"toilette\",\"object\":\"plafond\",\"type\":\"lights\",\"setOn\":{\"name\":\"On\",\"button\":0,\"channel\":1,\"event\":\"click\",\"eep\":\"f6-02-01\",\"value\":100},\"setOff\":{\"name\":\"Off\",\"button\":1,\"channel\":1,\"event\":\"click\",\"eep\":\"f6-02-01\",\"value\":0}}]",
        "payloadType": "json",
        "x": 1080,
        "y": 300,
        "wires": [
            [
                "2e5b57051b5b4533"
            ]
        ]
    },
    {
        "id": "2e5b57051b5b4533",
        "type": "change",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "Save",
        "rules": [
            {
                "t": "set",
                "p": "customDeviceList",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 300,
        "wires": [
            [
                "569f8fec8981559f"
            ]
        ]
    },
    {
        "id": "d25c44f4f7b7ca84",
        "type": "function",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "Merge in the custom devices with the main gateway devices",
        "func": "let module = global.get(\"module\");\nvar devices = module.settingsGetValue(\"msgDeviceList\");\nvar customDevices = global.get(\"customDeviceList\");\nif(devices !== undefined && customDevices !== undefined){\n    devices = devices.concat(customDevices);\n    module.settingsSetValue(\"msgDeviceList\", devices);\n    msg.payload = devices;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1205,
        "y": 160,
        "wires": [
            [
                "1bcfb2869a3e8b1f"
            ]
        ],
        "l": false
    },
    {
        "id": "1bcfb2869a3e8b1f",
        "type": "debug",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1255,
        "y": 160,
        "wires": [],
        "l": false
    },
    {
        "id": "6c6e8b6015b393f2",
        "type": "mqtt in",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "",
        "topic": "proknx/custom/cmd",
        "qos": "2",
        "datatype": "auto",
        "broker": "b7d2dbd0.c8ee4",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 1030,
        "y": 680,
        "wires": [
            [
                "2cdcafbee62d4c8b",
                "e8aa5223470234c9"
            ]
        ]
    },
    {
        "id": "2cdcafbee62d4c8b",
        "type": "json",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1005,
        "y": 600,
        "wires": [
            [
                "1ce15fe10bdd74bd"
            ]
        ],
        "l": false
    },
    {
        "id": "113f91b4a169febf",
        "type": "debug",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1375,
        "y": 700,
        "wires": [],
        "l": false
    },
    {
        "id": "f92dfcc4d3bcab54",
        "type": "function",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "Prepare request",
        "func": "msg.device=[];\nif (msg.cmd.type === \"lights\") {\n    if (msg.cmd.value !== undefined) {\n        for (var i = 0; i < msg.items.length; i++) {\n            if (msg.items[i].type === \"dimmers\" && msg.cmd.cmd !== \"off\") {\n               var val = msg.cmd.value/100 * msg.items[i].setBrightness.valueMax;\n               msg.device[i] = msg.items[i].setBrightness;\n               msg.device[i].value = val;\n            }else if (msg.cmd.value > 0) {\n                msg.device[i] = msg.items[i].setOn;\n            }else {\n                msg.device[i] = msg.items[i].setOff;\n            }\n        }\n    }else if (msg.cmd.cmd === \"on\") {\n        for (var i = 0; i < msg.items.length; i++) {\n            msg.device[i] = msg.items[i].setOn;\n        }\n    }else if (msg.cmd.cmd === \"off\") {\n        for (var i = 0; i < msg.items.length; i++) {\n            msg.device[i] = msg.items[i].setOff;\n        }\n    }\n}else if (msg.cmd.type === \"aux\" || msg.cmd.type === \"scenes\") {\n    if (msg.cmd.cmd === \"on\" || msg.cmd.cmd === \"set\") {\n        if (msg.cmd.value !== undefined) {\n          for (var i = 0; i < msg.items.length; i++) {\n            if (msg.items[i].setBrightness !== undefined) {\n                var val = msg.cmd.value;\n                val = precisionRound(val, 1);\n                msg.device[i] = msg.items[i].setBrightness;\n                msg.device[i].value = val;\n            } \n            else if (msg.cmd.value > 0) {\n               msg.device[i] = msg.items[i].setOn;\n            }\n            else {\n               msg.device[i] = msg.items[i].setOff;\n            }\n        }\n        }else {\n            for (var i = 0; i < msg.items.length; i++) {\n                msg.device[i] = msg.items[i].setOn;\n                msg.device[i] = Object.assign({}, msg.device[i], { eep: msg.items[i].eep });\n            }\n        }\n    }else if (msg.cmd.cmd === \"off\") {\n        for (var i = 0; i < msg.items.length; i++) {\n            if (msg.items[i].setOff !== undefined) {\n                msg.device[i] = msg.items[i].setOff;\n            }\n        }\n    }\n}  \n \nflow.set(\"msgDevice\",msg.device) ; //contain command info of the device\nflow.set(\"msgItems\",msg.items); // contain list of devices concerned\nflow.set(\"msgCmd\", msg.cmd);\n\nmsg.payload = msg.device;\n\nreturn msg; ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1235,
        "y": 640,
        "wires": [
            [
                "3c9d0a2cc0494e21",
                "8b150cdf1a8f60ff"
            ]
        ],
        "l": false
    },
    {
        "id": "0a288b39e028efd4",
        "type": "switch",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "Cmd ?",
        "property": "cmd.cmd",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "increase",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "decrease",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "on",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "off",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "set",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 1130,
        "y": 600,
        "wires": [
            [
                "dcc63ec81e61abd9"
            ],
            [
                "dcc63ec81e61abd9"
            ],
            [
                "f92dfcc4d3bcab54"
            ],
            [
                "f92dfcc4d3bcab54"
            ],
            [
                "f92dfcc4d3bcab54"
            ]
        ]
    },
    {
        "id": "3c9d0a2cc0494e21",
        "type": "split",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1295,
        "y": 660,
        "wires": [
            [
                "113f91b4a169febf",
                "ea9af51a9b79d110"
            ]
        ],
        "l": false
    },
    {
        "id": "1ce15fe10bdd74bd",
        "type": "change",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "move data from payload",
        "rules": [
            {
                "t": "set",
                "p": "cmd",
                "pt": "msg",
                "to": "payload.cmd",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "items",
                "pt": "msg",
                "to": "payload.items",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1055,
        "y": 600,
        "wires": [
            [
                "0a288b39e028efd4"
            ]
        ],
        "l": false
    },
    {
        "id": "24be72cd2b0c72e5",
        "type": "mqtt in",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "",
        "topic": "proknx/custom/query",
        "qos": "2",
        "datatype": "auto",
        "broker": "b7d2dbd0.c8ee4",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 1030,
        "y": 500,
        "wires": [
            [
                "a65b604abd3a5c61"
            ]
        ]
    },
    {
        "id": "a65b604abd3a5c61",
        "type": "json",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1175,
        "y": 500,
        "wires": [
            [
                "e59774aec38e598a"
            ]
        ],
        "l": false
    },
    {
        "id": "e59774aec38e598a",
        "type": "change",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "move data from payload",
        "rules": [
            {
                "t": "set",
                "p": "cmd",
                "pt": "msg",
                "to": "payload.cmd",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "items",
                "pt": "msg",
                "to": "payload.items",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1225,
        "y": 500,
        "wires": [
            [
                "7fc35062f890e1f5"
            ]
        ],
        "l": false
    },
    {
        "id": "dcc63ec81e61abd9",
        "type": "function",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "GET Current",
        "func": "msg.device = [];\nlet module = global.get(\"module\");\n\nif (msg.cmd.type === \"aux\" || msg.cmd.type === \"lights\" || msg.cmd.type === \"dimmers\" ) {\n    var cptok=0;\n    var cpter=0;\n    msg.itemsok=[];\n    msg.itemser=[];\n    for (let i = 0; i < msg.items.length; i++) {\n        if(msg.items[i].currentState !== undefined && msg.items[i].type !== \"lights\") {\n            msg.itemsok[cptok]=msg.items[i];\n            cptok++;\n        } else {\n            msg.itemser[cpter]=msg.items[i];\n            cpter++;\n        }\n    }\n    if (msg.itemsok[0] !== undefined) {\n        msg.items = msg.itemsok;\n        for (let i = 0; i < msg.itemsok.length; i++) {\n\t\t\tmsg.device[i] = msg.itemsok[i].currentState;\n        }\n        msg.payload = msg.device;\n        delete msg.device;\n        flow.set(\"msgDevice\", msg.device);\n        flow.set(\"msgItems\", msg.items);\n        flow.set(\"msgCmd\", msg.cmd);\n        return [msg, null];\n    }\n\n    if (msg.itemser.length > 0 && msg.itemsok.length === 0) {\n        if (msg.itemser.length > 1) {\n            msg.error = module.feedback(msg.cmd.lang, msg.cmd.siteId, \"unsupportedCommand_1\", [msg.itemser[0].name, msg.itemser.length-1]);\n        } else {\n            msg.error = module.feedback(msg.cmd.lang, msg.cmd.siteId, \"unsupportedCommand_2\", [msg.itemser[0].name]);\n        }\n    }\n    flow.set(\"msgError\", msg.error);\n    flow.set(\"msgCmd\", msg.cmd);\n    return [null, msg];\n}",
        "outputs": "2",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1235,
        "y": 580,
        "wires": [
            [
                "bfda932f0d3c2d07"
            ],
            [
                "788ffe78f9acff3f"
            ]
        ],
        "l": false
    },
    {
        "id": "7fc35062f890e1f5",
        "type": "function",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "GET_Current",
        "func": "let module = global.get(\"module\");\nmsg.device = [];\ndeviceList = msg.deviceList;\n\nif ( msg.cmd.type === \"aux\" || msg.cmd.type === \"lights\" || msg.cmd.type === \"dimmers\" || msg.cmd.type === \"sensor\") {\n    var cptok=0;\n    var cpter=0;\n    msg.itemsok=[];\n    msg.itemser=[];\n    for (var i = 0; i < msg.items.length; i++) {\n        if(msg.items[i].currentState !== undefined) {\n            msg.itemsok[cptok]=msg.items[i];\n            cptok++;\n        } else {\n            msg.itemser[cpter]=msg.items[i];\n            cpter++;\n        }\n    }\n    if (msg.itemsok[0] !== undefined) {\n        msg.items = msg.itemsok;\n        for (var i = 0; i < msg.itemsok.length; i++) {\n\t\t    msg.device[i] = msg.itemsok[i].currentState;   \n        }\n        msg.payload = msg.device;\n \t    flow.set(\"msgDevice\", msg.device);\n        flow.set(\"msgItems\", msg.items);\n        flow.set(\"msgCmd\", msg.cmd);\n\t    delete msg.device;\n        return [msg, null];\n    }\n\n    if (msg.itemser.length > 0 && msg.itemsok.length === 0) {\n        if (msg.itemser.length > 1) {\n            msg.error = module.feedback(msg.cmd.lang, msg.cmd.siteId, \"unsupportedCommand_1\", [msg.itemser[0].name, msg.itemser.length-1]);\n        } else {\n            msg.error = module.feedback(msg.cmd.lang, msg.cmd.siteId, \"unsupportedCommand_2\", [msg.itemser[0].name]);\n        }\n    }\n    flow.set(\"msgError\", msg.error);\n    flow.set(\"msgCmd\", msg.cmd);\n\n    return [null, msg];\n}",
        "outputs": "2",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1275,
        "y": 500,
        "wires": [
            [
                "649cb03a8b53779a"
            ],
            [
                "919ec85feb8541c5"
            ]
        ],
        "l": false
    },
    {
        "id": "788ffe78f9acff3f",
        "type": "link out",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "ERROR TO FEEDBACK",
        "links": [
            "521b53e0.33f214"
        ],
        "x": 1295,
        "y": 600,
        "wires": []
    },
    {
        "id": "919ec85feb8541c5",
        "type": "link out",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "ERROR TO FEEDBACK",
        "links": [
            "521b53e0.33f214"
        ],
        "x": 1375,
        "y": 520,
        "wires": []
    },
    {
        "id": "649cb03a8b53779a",
        "type": "function",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "Query",
        "func": "msg.device = msg.payload;\nmsg.payload = [];\nfor(var i = 0; i < msg.device.length ; i++){\n    msg.payload[i] = msg.device[i];\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1005,
        "y": 450,
        "wires": [
            [
                "13fe57eeef3922c5"
            ]
        ],
        "l": false
    },
    {
        "id": "13fe57eeef3922c5",
        "type": "split",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "split",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1055,
        "y": 450,
        "wires": [
            [
                "2b4b797729ab8614"
            ]
        ],
        "l": false
    },
    {
        "id": "e085b7bcd54703c5",
        "type": "function",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "Parser",
        "func": "msg.states = [];\nfor(var i=0; i < msg.payload.length ; i++){\n    try{\n        switch (msg.items[i].currentState.parser.toLowerCase()){\n            case \"shelly\":\n                if(msg.items[i].type === \"dimmers\"){\n                    var value = \"0\";\n                    var index = msg.items[i].currentState.id;\n                    if(msg.payload[i].lights[index].ison){\n                        value = msg.payload[i].lights[index].brightness.toString();\n                    }        \n                    msg.states[i]={\n                        \"Data\" : [{\n                            \"Value\" : value\n                        }]\n                    };     \n                }else if(msg.items[i].type === \"lights\"){\n                    var index = msg.items[i].currentState.id;\n                    msg.states[i]={\n                        \"Data\" : [{\n                            \"Value\" : (msg.payload[i].relays[index].ison) ? \"1\" : \"0\"\n                        }]\n                    };\n                }else if(msg.items[i].type === \"sensor\"){\n                    msg.states[i]={\n                        \"Data\" : [{            \n                            \"Value\" : msg.payload[i].states.status.value\n                        }]\n                    };\n                }\n                break;\n            default:\n                node.warn(\"Missing parser for \"+msg.items[i].currentState.parser)\n        }\n    } catch(e){\n        node.warn(\"Exception parsing Shelly reply: \"+e);\n    }\n\n    if(msg.states[i].Data[0].Value !== undefined){\n        msg.states[i].Result=true;\n    }else{\n        msg.states[i].Result=false;\n    }\n}\n\nmsg.payload=msg.states;\ndelete msg.states;\nif(msg.cmd.cmd !== undefined){\n    msg.command = true;\n}else{\n    msg.command = false;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1070,
        "y": 380,
        "wires": [
            [
                "68105d2d9367b6c1"
            ]
        ]
    },
    {
        "id": "23754c721bf2d393",
        "type": "join",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1375,
        "y": 440,
        "wires": [
            [
                "e085b7bcd54703c5"
            ]
        ],
        "l": false
    },
    {
        "id": "717efb4ad3f6f193",
        "type": "debug",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1375,
        "y": 480,
        "wires": [],
        "l": false
    },
    {
        "id": "2b4b797729ab8614",
        "type": "switch",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1275,
        "y": 450,
        "wires": [
            [
                "ee6647f28f4202ce"
            ],
            [
                "717efb4ad3f6f193"
            ]
        ],
        "l": false
    },
    {
        "id": "68105d2d9367b6c1",
        "type": "switch",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "command or query?",
        "property": "command",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1165,
        "y": 380,
        "wires": [
            [
                "7e880ce7ba4e6707"
            ],
            [
                "29f02ad0eccc5bf4"
            ]
        ],
        "outputLabels": [
            "if query",
            "if command"
        ],
        "l": false
    },
    {
        "id": "7e880ce7ba4e6707",
        "type": "link out",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "FEEDBACK",
        "links": [
            "a1b4e119.a687c8"
        ],
        "x": 1215,
        "y": 350,
        "wires": []
    },
    {
        "id": "29f02ad0eccc5bf4",
        "type": "link out",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "CONTINUE COMMAND OUT",
        "links": [
            "ac3e27bc37fe233c"
        ],
        "x": 1215,
        "y": 390,
        "wires": []
    },
    {
        "id": "ee6647f28f4202ce",
        "type": "json",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1335,
        "y": 440,
        "wires": [
            [
                "23754c721bf2d393"
            ]
        ],
        "l": false
    },
    {
        "id": "20945fd3e9469b2e",
        "type": "function",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "Prepare request",
        "func": "function precisionRound(number, precision) {\n   var factor = Math.pow(10, precision);\n   return Math.round(number * factor) / factor;\n}\ndelete msg.type;\ndelete msg.headers;\ndelete msg.certificate;\nmsg.device = [];\nmsg.current = msg.payload;\nmsg.newVal = [];\nif (msg.cmd.type === \"lights\" && msg.cmd.cmd === \"increase\") {\n   cptok = 0;\n   for (var i = 0; i < msg.items.length; i++) {\n      if (msg.items[i].type === \"dimmers\") {\n         if (msg.cmd.value !== undefined) {\n            var val = msg.cmd.value / 100 * msg.items[i].setBrightness.valueMax;\n            val = precisionRound(val, 1);\n            var newVal = parseInt(msg.current[i].Data[0].Value) + val;\n            if (newVal > msg.items[i].setBrightness.valueMax) {\n               newVal = msg.items[i].setBrightness.valueMax;\n            }\n            newVal = precisionRound(newVal, 1);\n            msg.device[cptok] = msg.items[i].setBrightness;\n            msg.device[cptok].value = newVal;\n            cptok++;\n         } else {\n            var newVal = parseInt(msg.current[i].Data[0].Value) + (0.2 * msg.items[i].setBrightness.valueMax);\n            if (newVal > msg.items[i].setBrightness.valueMax) {\n               newVal = msg.items[i].setBrightness.valueMax;\n            }\n            msg.device[cptok] = msg.items[i].setBrightness;\n            msg.device[cptok].value = newVal;\n            cptok++;\n         }\n      }\n   }\n} else if (msg.cmd.type === \"lights\" && msg.cmd.cmd === \"decrease\") {\n   cptok = 0;\n   for (var i = 0; i < msg.items.length; i++) {\n      if (msg.items[i].type === \"dimmers\") {\n         if (msg.cmd.value !== undefined) {\n            var val = msg.cmd.value / 100 * msg.items[i].setBrightness.valueMax;\n            val = precisionRound(val, 1);\n            var newVal = parseInt(msg.current[i].Data[0].Value) - val;\n            if (newVal < msg.items[i].setBrightness.valueMin) {\n               newVal = msg.items[i].setBrightness.valueMin;\n            }\n            newVal = precisionRound(newVal, 1);\n            msg.device[cptok] = msg.items[i].setBrightness;\n            msg.device[cptok].value = newVal;\n            cptok++;\n         } else {\n            var newVal = parseInt(msg.current[i].Data[0].Value) - (0.2 * msg.items[i].setBrightness.valueMax);\n            if (newVal < msg.items[i].setBrightness.valueMin) {\n               newVal = msg.items[i].setBrightness.valueMin;\n            }\n            newVal = precisionRound(newVal, 1);\n            msg.device[cptok] = msg.items[i].setBrightness;\n            msg.device[cptok].value = newVal;\n            cptok++;\n         }\n      }\n   }\n}\n\nmsg.payload = msg.device;\ndelete msg.url;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1235,
        "y": 680,
        "wires": [
            [
                "3c9d0a2cc0494e21"
            ]
        ],
        "l": false
    },
    {
        "id": "ac3e27bc37fe233c",
        "type": "link in",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "CONTINUE COMMAND IN",
        "links": [
            "29f02ad0eccc5bf4"
        ],
        "x": 1185,
        "y": 680,
        "wires": [
            [
                "20945fd3e9469b2e"
            ]
        ]
    },
    {
        "id": "bfda932f0d3c2d07",
        "type": "link out",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "CONTINUE QUERY OUT",
        "links": [
            "836b41a38ac79e8d"
        ],
        "x": 1295,
        "y": 560,
        "wires": []
    },
    {
        "id": "836b41a38ac79e8d",
        "type": "link in",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "CONTINUE QUERY IN",
        "links": [
            "bfda932f0d3c2d07"
        ],
        "x": 955,
        "y": 430,
        "wires": [
            [
                "649cb03a8b53779a"
            ]
        ]
    },
    {
        "id": "eb8844880bc4dd7d",
        "type": "comment",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "Readme Parser!",
        "info": "The parser for each device is defined in the device definition (see below).\nWhen you add a device from a different vendor, you must also modify the parser code below to handle the response.\n\n\"currentState\": {\n    \"name\": \"CurrentBrightness\",\n    \"url\": \"http://192.168.1.200/status\",\n    **\"parser\": \"shelly\",**\n    \"valueMin\": 0,\n    \"valueMax\": 100\n}",
        "x": 1070,
        "y": 350,
        "wires": []
    },
    {
        "id": "f37c3fe9deeeb1bf",
        "type": "comment",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "INFO / README",
        "info": "- This group, CUSTOM DEVICES, enables voice control of custom devices, i.e. apart from the devices of the main Gateway you can add-on here.\n- \n- Any device that can be controlled via HTTP can be  integrataded here.\n- \n- This sample demonstrates how to declare (publish) your custom devices, in this case Shelly Dimmer and Shelly Relays. \n",
        "x": 1020,
        "y": 80,
        "wires": []
    },
    {
        "id": "3cb3aad30d0a733d",
        "type": "comment",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "↓ This is called when Gateway devices has been updated ↓",
        "info": "",
        "x": 1150,
        "y": 120,
        "wires": []
    },
    {
        "id": "04c51508ff442c47",
        "type": "debug",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1410,
        "y": 300,
        "wires": [],
        "l": false
    },
    {
        "id": "569f8fec8981559f",
        "type": "function",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "Save cutomrooms",
        "func": "var customRooms = [];\nfor(var i = 0; i < msg.payload.length ; i++){\n    customRooms[i] = msg.payload[i].zone;\n}\nglobal.set(\"customRooms\", customRooms);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1360,
        "y": 300,
        "wires": [
            [
                "04c51508ff442c47"
            ]
        ],
        "l": false
    },
    {
        "id": "237c0b2324d565c3",
        "type": "switch",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "eep?",
        "property": "payload.eep",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "f6-02-01",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "f6-02-02",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "f6-03-01",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "f6-03-02",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1430,
        "y": 660,
        "wires": [
            [
                "dd74359dd9825ac5",
                "b1f832a73c0c484c"
            ],
            [
                "0cdb83c78087cab6",
                "bb3613295775ef52"
            ],
            [
                "e0449b56f2c97d16",
                "d30724841d136978"
            ],
            [
                "2a9937537c09d060",
                "f31e3118ad1bc274"
            ]
        ]
    },
    {
        "id": "dd74359dd9825ac5",
        "type": "link out",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "f6-02-01 out",
        "mode": "link",
        "links": [
            "44c83bde680851cb"
        ],
        "x": 1565,
        "y": 620,
        "wires": []
    },
    {
        "id": "0cdb83c78087cab6",
        "type": "link out",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "f6-02-02 out",
        "mode": "link",
        "links": [
            "544e621fbffe453c"
        ],
        "x": 1565,
        "y": 640,
        "wires": []
    },
    {
        "id": "e0449b56f2c97d16",
        "type": "link out",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "f6-03-01 out",
        "mode": "link",
        "links": [
            "4162af41c53dd4f8"
        ],
        "x": 1565,
        "y": 680,
        "wires": []
    },
    {
        "id": "2a9937537c09d060",
        "type": "link out",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "f6-03-02 out",
        "mode": "link",
        "links": [
            "a83de89197fac280"
        ],
        "x": 1565,
        "y": 700,
        "wires": []
    },
    {
        "id": "8b150cdf1a8f60ff",
        "type": "debug",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": " ",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1375,
        "y": 600,
        "wires": [],
        "l": false
    },
    {
        "id": "ea9af51a9b79d110",
        "type": "delay",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "",
        "pauseType": "rate",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "10",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1345,
        "y": 660,
        "wires": [
            [
                "237c0b2324d565c3"
            ]
        ],
        "l": false
    },
    {
        "id": "b1f832a73c0c484c",
        "type": "debug",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": " ",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1585,
        "y": 620,
        "wires": [],
        "l": false
    },
    {
        "id": "bb3613295775ef52",
        "type": "debug",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": " ",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1585,
        "y": 640,
        "wires": [],
        "l": false
    },
    {
        "id": "d30724841d136978",
        "type": "debug",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": " ",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1585,
        "y": 680,
        "wires": [],
        "l": false
    },
    {
        "id": "f31e3118ad1bc274",
        "type": "debug",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": " ",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1585,
        "y": 700,
        "wires": [],
        "l": false
    },
    {
        "id": "e8aa5223470234c9",
        "type": "debug",
        "z": "a6d29d13.3c30c",
        "g": "e2f01704a7c095f7",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1175,
        "y": 720,
        "wires": [],
        "l": false
    },
    {
        "id": "1a5783c8393e465c",
        "type": "inject",
        "z": "a6d29d13.3c30c",
        "g": "5b2a8d22374d4cf0",
        "name": "LRN",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"type\":\"LRN\",\"duration\":3}",
        "payloadType": "json",
        "x": 410,
        "y": 240,
        "wires": [
            [
                "9cb276cef038920e"
            ]
        ]
    },
    {
        "id": "105eb4227b319172",
        "type": "inject",
        "z": "a6d29d13.3c30c",
        "g": "5b2a8d22374d4cf0",
        "name": "DEL",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"type\":\"DEL\",\"duration\":3}",
        "payloadType": "json",
        "x": 410,
        "y": 200,
        "wires": [
            [
                "9cb276cef038920e"
            ]
        ]
    },
    {
        "id": "ca7059f858718b34",
        "type": "inject",
        "z": "a6d29d13.3c30c",
        "g": "5b2a8d22374d4cf0",
        "name": "manual teach in",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"type\":\"LRN\",\"senderId\":\"001f0984\",\"eep\":\"f6-02-01\",\"name\":\"switch light\"}",
        "payloadType": "json",
        "x": 440,
        "y": 160,
        "wires": [
            [
                "9cb276cef038920e"
            ]
        ]
    },
    {
        "id": "1f04762d607971ee",
        "type": "inject",
        "z": "a6d29d13.3c30c",
        "g": "5b2a8d22374d4cf0",
        "name": "manual delete",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"type\":\"DEL\",\"senderId\":\"001f0984\",\"eep\":\"f6-02-01\"}",
        "payloadType": "json",
        "x": 430,
        "y": 120,
        "wires": [
            [
                "9cb276cef038920e"
            ]
        ]
    },
    {
        "id": "9cb276cef038920e",
        "type": "enocean-actor",
        "z": "a6d29d13.3c30c",
        "g": "5b2a8d22374d4cf0",
        "name": "",
        "channel": "",
        "adt": false,
        "x": 650,
        "y": 160,
        "wires": [
            [
                "2f572da3ec11d6d2"
            ],
            []
        ]
    },
    {
        "id": "706f5c1cd027638a",
        "type": "link in",
        "z": "a6d29d13.3c30c",
        "g": "5b2a8d22374d4cf0",
        "name": "in input encean",
        "links": [
            "3107ef0c67f14dcd"
        ],
        "x": 575,
        "y": 120,
        "wires": [
            [
                "9cb276cef038920e"
            ]
        ]
    },
    {
        "id": "57fc523524c27b39",
        "type": "comment",
        "z": "a6d29d13.3c30c",
        "g": "5b2a8d22374d4cf0",
        "name": "README",
        "info": "This group learns Enocean devices as a real actuator would do.\n\n\n***LEARNING/TEACH-IN***\n    \n    you have 2 methods to learn a device, you can either click on LRN, that will start a teach in for 3 sec or, if you know the senderId and the EEP of your device you can edit the \"manual teach in\" node with the following structure :\n    \n    {\n        \"type\": \"LRN\",\n        \"senderId\": \"device_senderId\",\n        \"eep\": \"device_EEP\",\n        \"name\": \"device_name\"\n    }\n    \n    /!\\ DO NOT touch the double quotes !\n    \n    To edit the node, double click on it then click on the three dot on the right of the text \n    Deploy your work then inject \n    \n    please note that in the manual teach in, we add a name for the sensor and we don't when using the LRN node; this is not mandatory and only usefull in debug mode.\n    \n************\n    \n***DELETE***\n    \n    As you have 2 methods to teach in devices, there are 2 methods to delete a device. Clicking on the DEL node will start a delete for 3 sec, during this time you have to send a RF frame from the device you want to delete.\n    \n    if you want to manually delete a device from the actuator, edit the \"manual delete\" with the following structure :\n    \n    {\n        \"type\": \"DEL\",\n        \"senderId\": \"device_senderId\",\n        \"eep\": \"device_EEP\"\n    }\n    \n    /!\\ DO NOT touch the double quotes !\n    \n    To edit the node, double click on it then click on the three dot on the right of the text \n    Deploy your work then inject \n    \n    /!\\ unfortunatly ther is no reset option for the actuator, a possibility might be to delete it from the flow and then to put an other, you will find it in the left column of your screen. in that case do not forget to re-link the node together as it was. \n************\n\n***WHAT TO DO AFTER***\n    \n    Once you have learned your actuator you might want to use it. Depending of the incomming data, you have several possiblities. you can find example in the ENOCEAN SENSORS EXAMPLES flow\n    \n************\n\n/!\\ we highly recommand you to save at least one group as a template in case something bad happen\n",
        "x": 400,
        "y": 80,
        "wires": []
    },
    {
        "id": "2f572da3ec11d6d2",
        "type": "rbe",
        "z": "a6d29d13.3c30c",
        "g": "5b2a8d22374d4cf0",
        "name": "filter",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "payload",
        "x": 745,
        "y": 160,
        "wires": [
            [
                "1fb27af310cb4bf8"
            ]
        ],
        "l": false
    },
    {
        "id": "1fb27af310cb4bf8",
        "type": "debug",
        "z": "a6d29d13.3c30c",
        "g": "5b2a8d22374d4cf0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 785,
        "y": 120,
        "wires": [],
        "l": false
    },
    {
        "id": "a97526f901c41f9d",
        "type": "function",
        "z": "a6d29d13.3c30c",
        "g": "c35c250e1c6e5def",
        "name": "Prepare",
        "func": "let module = global.get(\"module\");\nlet payload = msg.payload;\nmsg.payload = {};\nmsg.payload.input = payload;\nif(msg.siteId !== undefined){\n    msg.payload.siteId = msg.siteId;\n}\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1860,
        "y": 480,
        "wires": [
            [
                "4927eaa8747d5f8d"
            ]
        ]
    },
    {
        "id": "4927eaa8747d5f8d",
        "type": "delay",
        "z": "a6d29d13.3c30c",
        "g": "c35c250e1c6e5def",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "2",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1965,
        "y": 480,
        "wires": [
            [
                "502aed4b4eb3aecf",
                "6526a9c4cd7277d9"
            ]
        ],
        "l": false
    },
    {
        "id": "502aed4b4eb3aecf",
        "type": "debug",
        "z": "a6d29d13.3c30c",
        "g": "c35c250e1c6e5def",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2015,
        "y": 440,
        "wires": [],
        "l": false
    },
    {
        "id": "eae05f3289e9221e",
        "type": "link in",
        "z": "a6d29d13.3c30c",
        "g": "c35c250e1c6e5def",
        "name": "enocean cmd in",
        "links": [
            "3799786b12ce5f1c",
            "04917c1f0fb05463",
            "3e1bae81f5c1082b"
        ],
        "x": 1755,
        "y": 480,
        "wires": [
            [
                "a97526f901c41f9d"
            ]
        ]
    },
    {
        "id": "221f2a01cfcd32b1",
        "type": "comment",
        "z": "a6d29d13.3c30c",
        "g": "c35c250e1c6e5def",
        "name": "README",
        "info": "This flow receive the commands from a sensor of an actuator group and send them to the Speech To Text\n",
        "x": 1800,
        "y": 420,
        "wires": []
    },
    {
        "id": "8afef149a91db47b",
        "type": "debug",
        "z": "a6d29d13.3c30c",
        "name": "msg.payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 695,
        "y": 460,
        "wires": [],
        "l": false
    },
    {
        "id": "3799786b12ce5f1c",
        "type": "link out",
        "z": "a6d29d13.3c30c",
        "name": "enocean cmd out",
        "mode": "link",
        "links": [
            "eae05f3289e9221e"
        ],
        "x": 695,
        "y": 460,
        "wires": []
    },
    {
        "id": "663a1179883938d3",
        "type": "function",
        "z": "a6d29d13.3c30c",
        "name": "conditon action",
        "func": "// Convert the hexadecimal value (msg.meta.payload) to decimal using parseInt with radix 16\nvar valueHex = msg.meta.payload;\nvar valueDec = parseInt(valueHex, 16);\n\nmsg = {};\n// Compare the decimal value and set the appropriate value for msg.payload\nif (valueDec === 0x70) {\n    msg.payload = \"allume table de nuit\";\n} else if (valueDec === 0x50) {\n    msg.payload = \"éteins table de nuit\";\n} else {\n    // If the value is not 70 or 50, do nothing (keep the original payload)\n    return null;\n}\n\n// Send the modified message to the output\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 645,
        "y": 460,
        "wires": [
            [
                "3799786b12ce5f1c",
                "8afef149a91db47b"
            ]
        ],
        "l": false
    },
    {
        "id": "c97016fa2f060f2a",
        "type": "debug",
        "z": "a6d29d13.3c30c",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.EB.description",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 695,
        "y": 640,
        "wires": [],
        "l": false
    },
    {
        "id": "d8014265083a89d3",
        "type": "switch",
        "z": "a6d29d13.3c30c",
        "name": "",
        "property": "payload.EB.description",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "pressed",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 645,
        "y": 680,
        "wires": [
            [
                "c97016fa2f060f2a",
                "d89fca694d05123c"
            ]
        ],
        "l": false
    },
    {
        "id": "d89fca694d05123c",
        "type": "function",
        "z": "a6d29d13.3c30c",
        "name": "will call help",
        "func": "let module = global.get(\"module\");\nlet arrAdapters = module.settingsGetValue(\"msgAdapter\");\nlet language = module.settingsGetValue(\"msgLang\");\nglobal.set(\"helpCallTrigger\",\"button\");\nmsg.payload = [];\nif(arrAdapters !== undefined){\n    var len = arrAdapters.length;\n    for (var i = 0; i < len; i++) {\n        let payload = module.feedback(language, \"\", \"HELPCALL_Call_For_Help\");   \n        payload.siteId = arrAdapters[i].siteName;\n        msg.payload.push(payload);\n    }\n    return msg;\n}\n    \n\n    \n \n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 705,
        "y": 680,
        "wires": [
            [
                "ca2b42ed3e05c8d7",
                "a97d669a2060cba0"
            ]
        ],
        "l": false
    },
    {
        "id": "ca2b42ed3e05c8d7",
        "type": "debug",
        "z": "a6d29d13.3c30c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 775,
        "y": 700,
        "wires": [],
        "l": false
    },
    {
        "id": "04213f96ac859010",
        "type": "link out",
        "z": "a6d29d13.3c30c",
        "name": "SPEAK OUT",
        "mode": "link",
        "links": [
            "a1b4e119.a687c8",
            "d5d2a1c0.bb66d"
        ],
        "x": 825,
        "y": 660,
        "wires": []
    },
    {
        "id": "a97d669a2060cba0",
        "type": "split",
        "z": "a6d29d13.3c30c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 775,
        "y": 660,
        "wires": [
            [
                "04213f96ac859010"
            ]
        ],
        "l": false
    },
    {
        "id": "b8da7324.ac706",
        "type": "inject",
        "z": "a6d29d13.3c30c",
        "g": "2b089b24fb045233",
        "name": "LRN",
        "props": [
            {
                "p": "payload",
                "v": "{\"type\":\"LRN\",\"duration\":3}",
                "vt": "json"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"type\":\"LRN\",\"duration\":3}",
        "payloadType": "json",
        "x": 230,
        "y": 480,
        "wires": [
            [
                "75dd71b9.5c90a"
            ]
        ]
    },
    {
        "id": "336f88c5.932b18",
        "type": "inject",
        "z": "a6d29d13.3c30c",
        "g": "2b089b24fb045233",
        "name": "DEL",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"type\":\"DEL\",\"duration\":3}",
        "payloadType": "json",
        "x": 230,
        "y": 460,
        "wires": [
            [
                "75dd71b9.5c90a"
            ]
        ]
    },
    {
        "id": "d5957ef5.439f",
        "type": "inject",
        "z": "a6d29d13.3c30c",
        "g": "2b089b24fb045233",
        "name": "manual teach in",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"type\":\"LRN\",\"senderId\":\"001f0984\",\"eep\":\"f6-02-01\",\"name\":\"switch light\"}",
        "payloadType": "json",
        "x": 200,
        "y": 440,
        "wires": [
            [
                "75dd71b9.5c90a"
            ]
        ]
    },
    {
        "id": "e529c437.4c4f18",
        "type": "inject",
        "z": "a6d29d13.3c30c",
        "g": "2b089b24fb045233",
        "name": "manual delete",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"type\":\"DEL\",\"senderId\":\"001f0984\",\"eep\":\"f6-02-01\"}",
        "payloadType": "json",
        "x": 210,
        "y": 420,
        "wires": [
            [
                "75dd71b9.5c90a"
            ]
        ]
    },
    {
        "id": "75dd71b9.5c90a",
        "type": "enocean-actor",
        "z": "a6d29d13.3c30c",
        "g": "2b089b24fb045233",
        "name": "",
        "channel": "",
        "adt": false,
        "x": 400,
        "y": 460,
        "wires": [
            [
                "824858af3288be7b"
            ],
            []
        ]
    },
    {
        "id": "ce7a95a6b864fe0d",
        "type": "link in",
        "z": "a6d29d13.3c30c",
        "g": "2b089b24fb045233",
        "name": "in input encean",
        "links": [
            "3107ef0c67f14dcd"
        ],
        "x": 325,
        "y": 420,
        "wires": [
            [
                "75dd71b9.5c90a"
            ]
        ]
    },
    {
        "id": "c12358771fd2f1a0",
        "type": "comment",
        "z": "a6d29d13.3c30c",
        "g": "2b089b24fb045233",
        "name": "readme",
        "info": "for manuell delete and teach in,\nyou need to put the correct senderId in the inject data,\notherwise they simply wont work.\n\nthey are not very important nodes as LRN and DEL allows you to start a teach in or a delete for 3 sec. within these 3 sec you need to push on button on the enocean device, it will send a RF frame and the senderId of the device will be learned in the actor node.",
        "x": 540,
        "y": 400,
        "wires": []
    },
    {
        "id": "824858af3288be7b",
        "type": "rbe",
        "z": "a6d29d13.3c30c",
        "g": "2b089b24fb045233",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "payload",
        "x": 485,
        "y": 460,
        "wires": [
            [
                "663a1179883938d3",
                "b2a7a955.ec75d8"
            ]
        ],
        "l": false
    },
    {
        "id": "b2a7a955.ec75d8",
        "type": "debug",
        "z": "a6d29d13.3c30c",
        "g": "2b089b24fb045233",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 535,
        "y": 440,
        "wires": [],
        "l": false
    },
    {
        "id": "c03f0d4c4356c1d5",
        "type": "enocean-actor",
        "z": "a6d29d13.3c30c",
        "g": "912961db93b0575f",
        "name": "",
        "channel": "",
        "adt": false,
        "x": 400,
        "y": 680,
        "wires": [
            [
                "591ac6ddb54a4e94"
            ],
            []
        ]
    },
    {
        "id": "644943328dedfac7",
        "type": "inject",
        "z": "a6d29d13.3c30c",
        "g": "912961db93b0575f",
        "name": "LRN",
        "props": [
            {
                "p": "payload",
                "v": "{\"type\":\"LRN\",\"duration\":3}",
                "vt": "json"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"type\":\"LRN\",\"duration\":3}",
        "payloadType": "json",
        "x": 230,
        "y": 700,
        "wires": [
            [
                "c03f0d4c4356c1d5"
            ]
        ]
    },
    {
        "id": "1fe112699a7d51f7",
        "type": "inject",
        "z": "a6d29d13.3c30c",
        "g": "912961db93b0575f",
        "name": "DEL",
        "props": [
            {
                "p": "payload",
                "v": "{\"type\":\"DEL\",\"duration\":3}",
                "vt": "json"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"type\":\"DEL\",\"duration\":3}",
        "payloadType": "json",
        "x": 230,
        "y": 680,
        "wires": [
            [
                "c03f0d4c4356c1d5"
            ]
        ]
    },
    {
        "id": "78e13798195ec231",
        "type": "inject",
        "z": "a6d29d13.3c30c",
        "g": "912961db93b0575f",
        "name": "manual teach in",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"type\":\"LRN\",\"senderId\":\"fefc15f8\",\"eep\":\"f6-02-01\",\"name\":\"tirette\"}",
        "payloadType": "json",
        "x": 200,
        "y": 660,
        "wires": [
            [
                "c03f0d4c4356c1d5"
            ]
        ]
    },
    {
        "id": "bcbc7929ce2b7894",
        "type": "inject",
        "z": "a6d29d13.3c30c",
        "g": "912961db93b0575f",
        "name": "manual delete",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"type\":\"DEL\",\"senderId\":\"fefc15f8\",\"eep\":\"f6-02-01\"}",
        "payloadType": "json",
        "x": 210,
        "y": 640,
        "wires": [
            [
                "c03f0d4c4356c1d5"
            ]
        ]
    },
    {
        "id": "90a1c48adfe8b7b2",
        "type": "link in",
        "z": "a6d29d13.3c30c",
        "g": "912961db93b0575f",
        "name": "in input encean",
        "links": [
            "3107ef0c67f14dcd"
        ],
        "x": 325,
        "y": 640,
        "wires": [
            [
                "c03f0d4c4356c1d5"
            ]
        ]
    },
    {
        "id": "026ca30720f20827",
        "type": "comment",
        "z": "a6d29d13.3c30c",
        "g": "912961db93b0575f",
        "name": "readme",
        "info": "for manuell delete and teach in,\nyou need to put the correct senderId in the inject data,\notherwise they simply wont work.\n\nthey are not very important nodes as LRN and DEL allows you to start a teach in or a delete for 3 sec. within these 3 sec you need to push on button on the enocean device, it will send a RF frame and the senderId of the device will be learned in the actor node.",
        "x": 540,
        "y": 620,
        "wires": []
    },
    {
        "id": "096175b4309a68bb",
        "type": "debug",
        "z": "a6d29d13.3c30c",
        "g": "912961db93b0575f",
        "name": "msg",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.EB.description",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 535,
        "y": 660,
        "wires": [],
        "l": false
    },
    {
        "id": "591ac6ddb54a4e94",
        "type": "rbe",
        "z": "a6d29d13.3c30c",
        "g": "912961db93b0575f",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "payload",
        "x": 485,
        "y": 680,
        "wires": [
            [
                "096175b4309a68bb",
                "d8014265083a89d3"
            ]
        ],
        "l": false
    },
    {
        "id": "6526a9c4cd7277d9",
        "type": "mqtt out",
        "z": "a6d29d13.3c30c",
        "g": "c35c250e1c6e5def",
        "name": "",
        "topic": "hermes/nlu/query",
        "qos": "",
        "retain": "",
        "broker": "f96ab142.d8bab8",
        "x": 2110,
        "y": 480,
        "wires": []
    },
    {
        "id": "cfcf4fbc.4250e",
        "type": "enocean-config-node",
        "serialport": "/dev/ttyUSB0"
    },
    {
        "id": "b7d2dbd0.c8ee4",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "f96ab142.d8bab8",
        "type": "mqtt-broker",
        "z": "d4cd0d7524aba4bc",
        "name": "-",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "3",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": "",
        "info": "-"
    }
]